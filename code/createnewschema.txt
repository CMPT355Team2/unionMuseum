-- Shuo Yuan
-- shy844
-- 11170609
-- CMPT355


-- create new schema domains, tables and attributes
-- 1. domains
DROP DOMAIN IF EXISTS nscode CASCADE;
DROP DOMAIN IF EXISTS nsacronym CASCADE;
DROP DOMAIN IF EXISTS nsmname CASCADE;
DROP DOMAIN IF EXISTS nswname CASCADE;
DROP DOMAIN IF EXISTS nslname CASCADE;
DROP DOMAIN IF EXISTS nssname CASCADE;
DROP DOMAIN IF EXISTS nsename CASCADE;
DROP DOMAIN IF EXISTS nsinsname CASCADE;
DROP DOMAIN IF EXISTS nsauthor CASCADE;
DROP DOMAIN IF EXISTS nscdatecom CASCADE;
DROP DOMAIN IF EXISTS nsadateacq CASCADE;
DROP DOMAIN IF EXISTS nsinsvalue CASCADE;
DROP DOMAIN IF EXISTS nstype CASCADE;
DROP DOMAIN IF EXISTS nsstype CASCADE;
DROP DOMAIN IF EXISTS nsntype CASCADE;
DROP DOMAIN IF EXISTS nswdesc CASCADE;
DROP DOMAIN IF EXISTS nsedesc CASCADE;
DROP DOMAIN IF EXISTS nssdate CASCADE;
DROP DOMAIN IF EXISTS nsedate CASCADE;
DROP DOMAIN IF EXISTS nsstime CASCADE;
DROP DOMAIN IF EXISTS nsetime CASCADE;
DROP DOMAIN IF EXISTS nsmedia CASCADE;
DROP DOMAIN IF EXISTS nsmeter CASCADE;
DROP DOMAIN IF EXISTS nscapacity CASCADE;
DROP DOMAIN IF EXISTS nsaddress CASCADE;
DROP DOMAIN IF EXISTS nssecurity CASCADE;
DROP DOMAIN IF EXISTS nsphone CASCADE;
DROP DOMAIN IF EXISTS nsemail CASCADE;
DROP DOMAIN IF EXISTS nsstatus CASCADE;
DROP DOMAIN IF EXISTS nscount CASCADE;

DROP TABLE IF EXISTS works CASCADE;
DROP TABLE IF EXISTS medium CASCADE;
DROP TABLE IF EXISTS exhibitions CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS doors CASCADE;
DROP TABLE IF EXISTS institutions CASCADE;
DROP TABLE IF EXISTS owners CASCADE;
DROP TABLE IF EXISTS transactions CASCADE;
DROP TABLE IF EXISTS changedvalue CASCADE;
DROP TABLE IF EXISTS works_exhibitions CASCADE;
DROP TABLE IF EXISTS works_locations CASCADE;
DROP TABLE IF EXISTS exhibitions_locations CASCADE;

CREATE DOMAIN nscode AS int(5);
CREATE DOMAIN nsacronym AS varchar(5);
CREATE DOMAIN nsmname AS varchar(40);
CREATE DOMAIN nswname AS varchar(100);
CREATE DOMAIN nslname AS varchar(20);
CREATE DOMAIN nssname AS varchar(30);
CREATE DOMAIN nsename AS varchar(40);
CREATE DOMAIN nsinsname AS varchar(40);
CREATE DOMAIN nsauthor AS varchar(30);
CREATE DOMAIN nscdatecom AS date;
CREATE DOMAIN nsadateacq AS date;
CREATE DOMAIN nsinsvalue AS int;
CREATE DOMAIN nstype AS varchar(30);
CREATE DOMAIN nsstype AS varchar(30);
CREATE DOMAIN nsntype AS varchar(30);
CREATE DOMAIN nswdesc AS text;
CREATE DOMAIN nsedesc AS text;
CREATE DOMAIN nssdate AS date;
CREATE DOMAIN nsedate AS date;
CREATE DOMAIN nsstime AS timestamp;
CREATE DOMAIN nsetime AS timestamp;
CREATE DOMAIN nsmedia AS varchar;
CREATE DOMAIN nsmeter AS int;
CREATE DOMAIN nscapacity AS int;
CREATE DOMAIN nsaddress AS varchar(30);
CREATE DOMAIN nssecurity AS varchar(30);
CREATE DOMAIN nsphone AS varchar(30);
CREATE DOMAIN nsemail AS varchar(30);
CREATE DOMAIN nsstatus AS varchar(30);
CREATE DOMAIN nscount AS int;

CREATE TABLE nsworks (
	nswscode nscode NOT NULL,
	nswsacronym nsacronym NOT NULL,
	nswsmname nsmname NOT NULL,
	nswswname nswname NOT NULL,
	nswstype nstype NOT NULL,
	nswsstype nsstype NOT NULL,
	nswsntype nsntype NOT NULL,
	nswsauthor nsauthor NOT NULL,
	nswscdatecom nscdatecom NOT NULL,
	nswsadateacq nsadateacq NOT NULL,
	nswswdesc nswdesc NOT NULL,
	CHECK (nswscdatecom < nswscdatecom AND nswsadateacq > timestamp '1990-07-01'),
	PRIMARY KEY (nswscode, nswsacronym, nswsmname)
);

CREATE TABLE nsmedium (
	nsmedacronym nsacronym NOT NULL,
	nsmedcode nscode NOT NULL,
	nsmedmname nsmname NOT NULL,
	nsmedmedia nsmedia NOT NULL,
	PRIMARY KEY (nsmedacronym, nsmedcode, nsmedmname, nsmedmedia),
	FOREIGN KEY (nsmedacronym, nsmedcode, nsmedmname)
		REFERENCES works
			ON UPDATE CASCADE
			ON DELETE SET NULL
);

CREATE TABLE nschangedvalue (
	nscvcode nscode NOT NULL,
	nscvacronym nsacronym NOT NULL,
	nscvmname nsmname NOT NULL,
	FOREIGN KEY (nscvcode, nscvacronym, nscvmname)
		REFERENCES works
			ON UPDATE CASCADE
      		ON DELETE SET NULL,
	nscvsdate nssdate NOT NULL,
	nscvedate nsedate,
	nscvinsvalue nsinsvalue NOT NULL,
	CHECK (nscvsdate < nscvedate),
	PRIMARY KEY (nscvcode, nscvacronym, nscvmname)

);

CREATE TABLE nsexhibitions (
	nsexename nsename NOT NULL,
	nsexsdate nssdate NOT NULL,
	nsexedate nsedate NOT NULL,
	nsexmname nsmname NOT NULL,
	nsexedesc nsedesc NOT NULL,
	CHECK (nsexsdate < nsexedate),
	PRIMARY KEY (nsename, nssdate, nsexmname)
);

CREATE TABLE nschangedcount (
	nsccename nsename NOT NULL,
	nsccsdate nssdate NOT NULL,
	FOREIGN KEY (nsccename, nsccsdate)
		REFERENCES exhibitions
			ON UPDATE CASCADE
      		ON DELETE SET NULL,
	nsccsdatecs nssdate NOT NULL,
	nsccsdatece nsedate NOT NULL,
	nscccount nscount NOT NULL
	CHECK (nsccsdatecs < nsccsdatece)
	PRIMARY KEY (nsccename, nsccsdate, nsccsdatecs)
);

CREATE TABLE nslocations (
	nsloclname nslname NOT NULL,
	nslocmname nsmname NOT NULL,
	nslocsname nssname NOT NULL,
	nslocmeterlen nsmeter NOT NULL,
	nslocmeterwid nsmeter NOT NULL,
	nslocmeterhei nsmeter NOT NULL,
	nsloccapacitymin nscapacity NOT NULL,
	nsloccapacitymax nscapacity NOT NULL,
	CHECK (nsloccapacitymin <= nsloccapacitymax),
	PRIMARY KEY (nsloclname, nslocmname, nslocsname)
);

CREATE TABLE institutions (
	nsinsinsname nsinsname NOT NULL,
	nsinsphone nsphone NOT NULL,
	nsinsaddress nsaddress NOT NULL,
	nsinsemail nsemail NOT NULL,
	nsinssname nssname NOT NULL,
	nsinssecurity nssecurity NOT NULL,
	PRIMARY KEY (nsinsinsname)
);

CREATE TABLE nsowners (
	nsowcode nscode NOT NULL,
	nsowacronym nsacronym NOT NULL,
	nsowmname nsmname NOT NULL,
	FOREIGN KEY (nsowcode, nsowacronym)
		REFERENCES works
			ON UPDATE CASCADE
      		ON DELETE SET NULL,
    FOREIGN KEY (nsowmname)
		REFERENCES institutions
			ON UPDATE CASCADE
      		ON DELETE SET NULL,
	nsowsdate nssdate NOT NULL,
	nsowedate nsedate,
	nsowstatus nsstatus NOT NULL,
	CHECK (nsowsdate < nsowedate),
	PRIMARY KEY (nsowcode, nsowacronym, nsowmname, nsowsdate)
);

CREATE TABLE nstransactions (
	nstrcode nscode not null,
	nstracronym nsacronym not null,
	nstrmname nsmname not null,
	FOREIGN KEY (nstrcode, nstracronym)
		REFERENCES works
			ON UPDATE CASCADE
      		ON DELETE SET NULL,
    FOREIGN KEY (nstrmname)
		REFERENCES institutions
			ON UPDATE CASCADE
      		ON DELETE SET NULL,
	nstrsdate nssdate not null,
	nstredate nsedate,
	nstrinsvalue nsinsvalue not null,
	CHECK (nstrsdate < nstredate),
	PRIMARY KEY (nstrcode, nstracronym, nstrmname, nstrsdate)

);

CREATE TABLE nsworks_locations (
	nswlcode nscode not null,
	nswlacronym nsacronym not null,
	nswlmname1 nsmname not null,
	FOREIGN KEY (nswlcode, nswlacronym, nswlmname1)
		REFERENCES works
			ON UPDATE CASCADE
      		ON DELETE SET NULL,
	nswllname nslname NOT NULL,
	nswlmname2 nsmname NOT NULL,
	nswlsname nssname NOT NULL,
	FOREIGN KEY (nswllname, nswlmname2, nswlsname)
		REFERENCES locations
			ON UPDATE CASCADE
      		ON DELETE SET NULL,
	nswlstime nsstime not null,
	nswletime nsetime,
	CHECK (nswlstime < nswletime AND nswlmname1 == nswlmname2)
	PRIMARY KEY (nswlcode, nswlacronym, nswlmname1, nswllname, nswlmname2, nswlsname)
);

CREATE TABLE nsworks_exhibitions (
	nswecode nscode not null,
	nsweacronym nsacronym not null,
	nswemname1 nsmname not null,
	FOREIGN KEY (nswecode, nsweacronym, nswemname1)
		REFERENCES works
			ON UPDATE CASCADE
      		ON DELETE SET NULL,
    nsweename nsename not null,
    nswesdate nssdate not null,
    nswemname2 nsmname not null,
    FOREIGN KEY (nsweename, nswesdate, nswemname2)
		REFERENCES exhibitions
			ON UPDATE CASCADE
      		ON DELETE SET NULL,
    nsweedate nsedate,
    CHECK (nswesdate < nsweedate AND nswemname1 == nswemname2),
    PRIMARY KEY (nswecode, nsweacronym, nswemname1, nsweename, nswesdate, nswemname2)

);

CREATE TABLE nsexhibitions_locations (
	nselname nsename not null,
    nselsdate nssdate not null,
    nselmname1 nsmname not null,
    FOREIGN KEY (nselname, nselsdate, nselmname1)
		REFERENCES works
			ON UPDATE CASCADE
      		ON DELETE SET NULL,
    nsellname nslname NOT NULL,
	nselmname2 nsmname NOT NULL,
	nselsname nssname NOT NULL,
	FOREIGN KEY (nsellname, nselmname2, nselsname)
		REFERENCES locations
			ON UPDATE CASCADE
      		ON DELETE SET NULL,
    nseledate nsedate,
    CHECK (nselsdate < nseledate AND nselmname1 == nselmname2),
    PRIMARY KEY (nselname, nselsdate, nselmname1, nsellname, nselmname2, nselsname)
);

CREATE TABLE doors (
	nsdrlname1 nslname not NULL,
	nsdrmname1 nsmname not null,
	FOREIGN KEY (nsdrlname1, nsdrmname1)
		REFERENCES locations
			ON UPDATE CASCADE
			ON DELETE SET NULL,
	nsdrlname2 nslname not NULL,
	nsdrmname2 nsmname not null,
	FOREIGN KEY (nsdrlname2, nsdrmname2)
		REFERENCES locations
			ON UPDATE CASCADE
			ON DELETE SET NULL,
	CHECK (nsdrmname1 == nsdrmname2),
	PRIMARY KEY (nsdrlname1, nsdrmname1, nsdrlname2, nsdrmname2)

);
